{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Form, Card, InputGroup, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //--------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({\n  saveUserInfo: () => {},\n  users: [],\n  updateCtxBalance: () => {},\n  currentUser: {},\n  updateCurrUser: () => {}\n});\nexport const DataContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState([{\n    \"name\": '',\n    \"email\": '',\n    \"password\": '',\n    \"balance\": 0\n  }]);\n  const [currUser, setCurrUser] = useState(\"\");\n\n  const saveUserHandler = (name, email, password, balance) => {\n    let newUser = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password,\n      \"balance\": balance\n    };\n    setUserList(prevState => [...prevState, newUser]);\n    setCurrUser(newUser);\n  };\n\n  const updateCtxBalance = (num, calc) => {\n    let newBal = 0;\n\n    if (calc === \"ADD\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) + parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    } else if (calc === \"MINUS\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) - parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    }\n\n    setCurrUser(prevState => {\n      return { ...prevState,\n        \"balance\": newBal\n      };\n    });\n  };\n\n  const updateCurrUser = username => {\n    let loggedInUser = userList.filter(user => user.email === username)[0];\n    setCurrUser(loggedInUser);\n  };\n\n  let myValue = {\n    saveUserInfo: saveUserHandler,\n    users: userList,\n    updateCtxBalance: updateCtxBalance,\n    currentUser: currUser,\n    updateCurrUser: updateCurrUser\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: myValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}; //------------------------------------------------------------------\n\n_s(DataContextProvider, \"c9KeJhqMRhmDxfbrGPQfxEiRssU=\");\n\n_c = DataContextProvider;\n\nfunction CreateAccount({\n  updateUserStatus,\n  isUser\n}) {\n  _s2();\n\n  const [Name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const ctx = useContext(DataContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password.length < 8) {\n      alert(\"Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      //updateUserStatus();\n      ctx.saveUserInfo(Name, email, password, 0);\n      alert('Success! Account created.');\n      console.log(JSON.stringify(ctx));\n    }\n  };\n\n  const NameInput = e => {\n    setName(e.target.value);\n    setIsValid(true);\n  };\n\n  const emailInput = e => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  };\n\n  const passwordInput = e => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Create Account\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \" Create An Account \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"acc-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3-name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"name-label\",\n            children: \"Enter Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: NameInput,\n              placeholder: \"Enter Name\",\n              required: true,\n              id: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3-email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Email address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              onChange: emailInput,\n              placeholder: \"email@address.com\",\n              required: true,\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3-password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"password\",\n              required: true,\n              id: \"password\",\n              onChange: passwordInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Password must contain at least 8 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !isValid,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: \"input\",\n          type: \"reset\",\n          value: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(CreateAccount, \"WYwNUv3KIyMe8jMw2l70N4ITabA=\");\n\n_c2 = CreateAccount;\nexport default CreateAccount;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataContextProvider\");\n$RefreshReg$(_c2, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js"],"names":["React","useState","useContext","createContext","Form","Card","InputGroup","Button","DataContext","saveUserInfo","users","updateCtxBalance","currentUser","updateCurrUser","DataContextProvider","children","userList","setUserList","currUser","setCurrUser","saveUserHandler","name","email","password","balance","newUser","prevState","num","calc","newBal","i","length","parseInt","username","loggedInUser","filter","user","myValue","CreateAccount","updateUserStatus","isUser","Name","setName","setEmail","setPassword","isValid","setIsValid","ctx","handleSubmit","e","preventDefault","alert","console","log","JSON","stringify","NameInput","target","value","emailInput","passwordInput"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,MAAjC,QAA8C,iBAA9C;AACA,OAAO,sCAAP,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC;AAC9BM,EAAAA,YAAY,EAAE,MAAM,CAAE,CADQ;AAE9BC,EAAAA,KAAK,EAAE,EAFuB;AAG9BC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAHI;AAI9BC,EAAAA,WAAW,EAAE,EAJiB;AAK9BC,EAAAA,cAAc,EAAE,MAAM,CAAE;AALM,CAAD,CAAjC;AAQE,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAC;AACxC,YAAQ,EADgC;AAExC,aAAS,EAF+B;AAGxC,gBAAY,EAH4B;AAIxC,eAAW;AAJ6B,GAAD,CAAD,CAAxC;AAMA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMmB,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,OAAxB,KAAoC;AAC1D,QAAIC,OAAO,GAAG;AACZ,cAAQJ,IADI;AAEZ,eAASC,KAFG;AAGZ,kBAAYC,QAHA;AAIZ,iBAAWC;AAJC,KAAd;AAOAP,IAAAA,WAAW,CAACS,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAd,CAAX;AACAN,IAAAA,WAAW,CAACM,OAAD,CAAX;AACD,GAVD;;AAYA,QAAMd,gBAAgB,GAAG,CAACgB,GAAD,EAAMC,IAAN,KAAe;AACtC,QAAIC,MAAM,GAAG,CAAb;;AAEA,QAAID,IAAI,KAAK,KAAb,EAAoB;AAClBX,MAAAA,WAAW,CAACS,SAAS,IAAI;AACvB,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,cAAIJ,SAAS,CAACI,CAAD,CAAT,CAAaR,KAAb,KAAuBJ,QAAQ,CAACI,KAApC,EAA2C;AACzCO,YAAAA,MAAM,GAAGG,QAAQ,CAACN,SAAS,CAACI,CAAD,CAAT,CAAaN,OAAd,CAAR,GAAiCQ,QAAQ,CAACL,GAAD,CAAlD;AACAD,YAAAA,SAAS,CAACI,CAAD,CAAT,CAAaN,OAAb,GAAuBK,MAAvB;AACD;AACF;;AACD,eAAOH,SAAP;AACD,OARU,CAAX;AASD,KAVD,MAUO,IAAGE,IAAI,KAAK,OAAZ,EAAqB;AAC1BX,MAAAA,WAAW,CAACS,SAAS,IAAI;AACvB,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,cAAIJ,SAAS,CAACI,CAAD,CAAT,CAAaR,KAAb,KAAuBJ,QAAQ,CAACI,KAApC,EAA2C;AACzCO,YAAAA,MAAM,GAAGG,QAAQ,CAACN,SAAS,CAACI,CAAD,CAAT,CAAaN,OAAd,CAAR,GAAiCQ,QAAQ,CAACL,GAAD,CAAlD;AACAD,YAAAA,SAAS,CAACI,CAAD,CAAT,CAAaN,OAAb,GAAuBK,MAAvB;AACD;AACF;;AACD,eAAOH,SAAP;AACD,OARU,CAAX;AASD;;AAEDP,IAAAA,WAAW,CAACO,SAAS,IAAI;AACvB,aAAO,EAAC,GAAGA,SAAJ;AAAe,mBAAUG;AAAzB,OAAP;AACD,KAFU,CAAX;AAGD,GA5BD;;AA8BA,QAAMhB,cAAc,GAAIoB,QAAD,IAAc;AACnC,QAAIC,YAAY,GAAGlB,QAAQ,CAACmB,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACd,KAAL,KAAeW,QAAvC,EAAiD,CAAjD,CAAnB;AAEAd,IAAAA,WAAW,CAACe,YAAD,CAAX;AACD,GAJD;;AAMA,MAAIG,OAAO,GAAG;AACZ5B,IAAAA,YAAY,EAAEW,eADF;AAEZV,IAAAA,KAAK,EAAEM,QAFK;AAGZL,IAAAA,gBAAgB,EAAEA,gBAHN;AAIZC,IAAAA,WAAW,EAAEM,QAJD;AAKZL,IAAAA,cAAc,EAAEA;AALJ,GAAd;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAEwB,OADT;AAAA,cAGGtB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxEM,C,CAyET;;GAzEeD,mB;;KAAAA,mB;;AA0Ef,SAASwB,aAAT,CAAuB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAvB,EAAqD;AAAA;;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,KAAD,EAAQqB,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,QAAD,EAAWqB,WAAX,IAA0B3C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4C,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM8C,GAAG,GAAG7C,UAAU,CAACM,WAAD,CAAtB;;AAEA,QAAMwC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI3B,QAAQ,CAACQ,MAAT,GAAkB,CAAtB,EAAyB;AACvBoB,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACAP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAHD,MAGO;AACL;AACAG,MAAAA,GAAG,CAACtC,YAAJ,CAAiBgC,IAAjB,EAAuBnB,KAAvB,EAA8BC,QAA9B,EAAwC,CAAxC;AACA4B,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAAZ;AACD;AACF,GAZD;;AAcA,QAAMS,SAAS,GAAIP,CAAD,IAAO;AACvBP,IAAAA,OAAO,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAP;AACAZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMa,UAAU,GAAIV,CAAD,IAAO;AACxBN,IAAAA,QAAQ,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAR;AACAZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMc,aAAa,GAAIX,CAAD,IAAO;AAC3BL,IAAAA,WAAW,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACAZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,sBACI,QAAC,IAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,MAAM,EAAC,gBAFT;AAAA,4BAII,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAEE,YAArC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,WAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,mCACI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,QAAQ,EAAEQ,SAFd;AAGI,cAAA,WAAW,EAAC,YAHhB;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,EAAE,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,mCACI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,QAAQ,EAAEG,UAFd;AAGI,cAAA,WAAW,EAAC,mBAHhB;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,EAAE,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eA2BE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,eAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,mCACI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,WAAW,EAAC,UAFhB;AAGI,cAAA,QAAQ,MAHZ;AAII,cAAA,EAAE,EAAC,UAJP;AAKI,cAAA,QAAQ,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,eA2CE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACf,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CF,eA+CE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,OAAX;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DD;;IAhGQP,a;;MAAAA,a;AAkGT,eAAeA,aAAf","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { Form, Card, InputGroup, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//--------------------------------------------------------------\nconst DataContext = createContext({\n    saveUserInfo: () => {},\n    users: [],\n    updateCtxBalance: () => {},\n    currentUser: {},\n    updateCurrUser: () => {}\n  });\n  \n  export const DataContextProvider = ({ children }) => {\n    const [userList, setUserList] = useState([{      \n      \"name\": '',\n      \"email\": '',\n      \"password\": '',\n      \"balance\": 0\n    }]);\n    const [currUser, setCurrUser] = useState(\"\");\n    \n    const saveUserHandler = (name, email, password, balance) => {\n      let newUser = {\n        \"name\": name,\n        \"email\": email,\n        \"password\": password,\n        \"balance\": balance\n      };\n  \n      setUserList(prevState => [...prevState, newUser]);\n      setCurrUser(newUser);\n    }\n  \n    const updateCtxBalance = (num, calc) => {\n      let newBal = 0;\n  \n      if (calc === \"ADD\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) + parseInt(num);\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      } else if(calc === \"MINUS\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) - parseInt(num)\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      }\n      \n      setCurrUser(prevState => {\n        return {...prevState, \"balance\":newBal}\n      })\n    }\n  \n    const updateCurrUser = (username) => {\n      let loggedInUser = userList.filter(user => user.email === username)[0];\n  \n      setCurrUser(loggedInUser);\n    }\n  \n    let myValue = {\n      saveUserInfo: saveUserHandler,\n      users: userList,\n      updateCtxBalance: updateCtxBalance,\n      currentUser: currUser,\n      updateCurrUser: updateCurrUser\n    }\n  \n    return (\n      <DataContext.Provider\n        value={myValue}\n      >\n        {children}\n      </DataContext.Provider>\n    )\n  }\n//------------------------------------------------------------------\nfunction CreateAccount({ updateUserStatus, isUser }) {\n  const [Name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  \n  const ctx = useContext(DataContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (password.length < 8) {\n      alert(\"Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      //updateUserStatus();\n      ctx.saveUserInfo(Name, email, password, 0);\n      alert('Success! Account created.');\n      console.log(JSON.stringify(ctx));\n    }\n  }\n  \n  const NameInput = (e) => {\n    setName(e.target.value);\n    setIsValid(true);\n  }\n\n  const emailInput = (e) => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  }\n\n  const passwordInput = (e) => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  }\n\n  return (\n      <Card\n        bgcolor=\"primary\"\n        header=\"Create Account\"\n      >\n          <Card.Header> Create An Account </Card.Header>\n          <Card.Body>\n              <Form className=\"acc-form\" onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3-name\">\n                    <Form.Label className=\"name-label\">Enter Full Name</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            onChange={NameInput}\n                            placeholder=\"Enter Name\"\n                            required\n                            id=\"name\"\n                        />\n                    </InputGroup>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3-email\">\n                    <Form.Label> Email address </Form.Label>\n                    <InputGroup>\n                        <Form.Control \n                            type=\"email\"\n                            onChange={emailInput}\n                            placeholder=\"email@address.com\"\n                            required\n                            id=\"email\"\n                        />\n                    </InputGroup>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3-password\">\n                    <Form.Label>Password</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"password\"\n                            required\n                            id=\"password\"\n                            onChange={passwordInput}\n                        />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                        Password must contain at least 8 characters.\n                    </Form.Text>\n                </Form.Group>\n\n                <Button type=\"submit\" disabled={!isValid}>\n                    Create Account\n                </Button>\n                \n                <Button as=\"input\" type=\"reset\" value=\"Reset\"/>\n            </Form>\n        </Card.Body>\n      </Card>\n  );\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}