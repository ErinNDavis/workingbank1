{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport DataContext from \"../userContext\";\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [enable, setEnable] = React.useState('');\n  const ctx = React.useContext(DataContext);\n\n  function validata(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''), 5000);\n      alert(label + \" is blank\");\n      return false;\n    }\n\n    if (label === \"password\") {\n      if (field.length < 8) {\n        alert(\"passwords need to be 8 or more characters\");\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function validateInput() {\n    var button = document.getElementById(\"createaccountsubmit\");\n    var name = document.getElementById(\"name\");\n    var email = document.getElementById(\"email\");\n    var password = document.getElementById(\"password\");\n    var enabled = true;\n\n    if (name.value === \"\" && email.value === \"\" && password.value === \"\") {\n      enabled = false;\n    }\n\n    if (enabled) {\n      setEnable(\"enable\");\n    } else {\n      setEnable(\"\");\n    }\n  }\n\n  function handleCreate() {\n    console.log(name, email, password);\n    if (!validata(name, 'name')) return;\n    if (!validata(email, 'email')) return;\n    if (!validata(password, 'password')) return;\n    ctx.users.push({\n      name,\n      email,\n      password,\n      balance: 100\n    });\n    setShow(false);\n  }\n\n  function clearForm() {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setEnable('');\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Create Account\",\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \" Create An Account \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \" Card Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"Text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Check me out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this) //body={show ? (\n  // <>\n  // Name<br/>\n  // <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => {setName(e.currentTarget.value); validateInput()}}/><br/>\n  // Email address<br/>\n  // <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => {setEmail(e.currentTarget.value); validateInput()}}/><br/>\n  // Password<br/>\n  // <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => {setPassword(e.currentTarget.value); validateInput()}}/><br/>\n  // <button type=\"submit\" disabled = {enable === \"\"} id = \"createaccountsubmit\" className=\"btn btn-light\" onClick={handleCreate}>Create Account</button>\n  // </>\n  //):(\n  //    <>\n  //    <h5>Success</h5>\n  //    <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Add another ///account</button>\n  //    </>\n  //)}\n  // />\n  ;\n}\n\n_s(CreateAccount, \"X0W9nKY/sHISAuRZvQ6isAJjrcM=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js"],"names":["React","DataContext","Card","Form","Button","CreateAccount","show","setShow","useState","status","setStatus","name","setName","email","setEmail","password","setPassword","enable","setEnable","ctx","useContext","validata","field","label","setTimeout","alert","length","validateInput","button","document","getElementById","enabled","value","handleCreate","console","log","users","push","balance","clearForm"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport DataContext from \"../userContext\";\nimport { Card, Form, Button } from 'react-bootstrap';\n\n\nfunction CreateAccount(){\n    const [show, setShow] = React.useState(true);\n    const [status, setStatus] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [enable, setEnable] = React.useState('');\n    const ctx = React.useContext(DataContext);\n\n    function validata(field, label){\n        if (!field){\n            setStatus('Error: ' + label);\n            setTimeout(() => setStatus(''),5000);\n            alert(label + \" is blank\");\n            return false;\n        }\n        if (label === \"password\") {\n            if (field.length < 8) {\n                alert(\"passwords need to be 8 or more characters\");\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function validateInput() {\n        var button = document.getElementById(\"createaccountsubmit\");\n        var name = document.getElementById(\"name\");\n        var email = document.getElementById(\"email\");\n        var password = document.getElementById(\"password\");\n        var enabled = true;\n\n        if (name.value === \"\" && email.value === \"\" && password.value === \"\") {\n            enabled = false;\n        }\n        if (enabled) {\n            setEnable(\"enable\");\n        } else {\n            setEnable(\"\");\n        }\n    }\n    function handleCreate(){\n        console.log(name,email,password);\n        if (!validata(name, 'name')) return;\n        if(!validata(email, 'email')) return;\n        if (!validata(password, 'password')) return;\n        ctx.users.push({name,email,password,balance:100});\n        setShow(false);\n    }\n    \n    function clearForm(){\n        setName('');\n        setEmail('');\n        setPassword('');\n        setEnable('');\n        setShow(true);\n    }\n\n    return (\n        <Card\n            bgcolor=\"primary\"\n            header=\"Create Account\"\n            status={status}\n        >\n            <Card.Header> Create An Account </Card.Header>\n            <Card.Body>\n                <Card.Title> Card Title </Card.Title>\n                <Card.Text>\n                    Text.\n                </Card.Text>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                        <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Card.Body>\n        </Card>\n            //body={show ? (\n               // <>\n               // Name<br/>\n               // <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => {setName(e.currentTarget.value); validateInput()}}/><br/>\n               // Email address<br/>\n               // <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => {setEmail(e.currentTarget.value); validateInput()}}/><br/>\n               // Password<br/>\n               // <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => {setPassword(e.currentTarget.value); validateInput()}}/><br/>\n               // <button type=\"submit\" disabled = {enable === \"\"} id = \"createaccountsubmit\" className=\"btn btn-light\" onClick={handleCreate}>Create Account</button>\n               // </>\n            //):(\n            //    <>\n            //    <h5>Success</h5>\n            //    <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Add another ///account</button>\n            //    </>\n            //)}\n        // />\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}