{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Form, Card, Button, closeButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CreateAccount.css';\nimport { Link } from 'react-router-dom';\nimport DataContext from '../Context/data-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount({\n  updateUserStatus,\n  isUser\n}) {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const ctx = useContext(DataContext);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (firstName === \"\") {\n      alert(\"Error: First name field required.\");\n      return;\n    } else if (firstName[0] !== firstName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (lastName === \"\") {\n      alert(\"Error: Last name field required.\");\n      return;\n    } else if (lastName[0] !== lastName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (email === \"\") {\n      alert(\"Error: Email field required.\");\n      return;\n    }\n\n    if (password === \"\") {\n      alert(\"Error: Password field required.\");\n      return;\n    }\n\n    if (isChecked === false) {\n      alert(\"Error: Must agree to Terms & Conditions to create account.\");\n      return;\n    }\n\n    if (password.length < 8) {\n      alert(\"Error: Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      updateUserStatus();\n      let fullName = firstName + \" \" + lastName;\n      ctx.saveUserInfo(fullName, email, password, 0);\n      alert('Success! Your account has been created.');\n    }\n  };\n\n  const firstNameInput = e => {\n    setFirstName(e.target.value);\n    setIsValid(true);\n  };\n\n  const lastNameInput = e => {\n    setLastName(e.target.value);\n    setIsValid(true);\n  };\n\n  const emailInput = e => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  };\n\n  const passwordInput = e => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  };\n\n  const checkbox = e => {\n    setIsChecked(true);\n    setIsValid(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-page create-acc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"join-us\",\n      children: \"Join the Flock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"online-acc\",\n      children: \"Create an Online Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"acc-form\",\n        onSubmit: handleSubmit,\n        children: [isUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you would like to add another account, complete form again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"name-label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: firstName,\n            onChange: firstNameInput,\n            placeholder: \"First Name\",\n            className: \"first-name\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: lastName,\n            onChange: lastNameInput,\n            placeholder: \"Last Name\",\n            className: \"last-name\",\n            autoComplete: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: emailInput,\n            placeholder: \"Enter email\",\n            className: \"email-input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"email-text\",\n            children: \"Emails will be used as your username for Logins.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: passwordInput,\n            placeholder: \"Password\",\n            className: \"password-input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkbox\",\n            type: \"checkbox\",\n            onChange: checkbox,\n            name: \"terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"terms\",\n            children: \"\\xA0I agree to the\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"terms-btn\",\n            type: \"button\",\n            onClick: handleShow,\n            children: \"Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rd-btn reg-btn\",\n          type: \"submit\",\n          disabled: !isValid,\n          children: !isUser ? 'Create Account' : 'Add Another Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), !isUser && /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-foot\",\n        children: [\"Already have an account? \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Login/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rd-btn reg-btn\",\n            children: \"Log in here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAccount, \"g45X+KUfSq8MHGmX9WJcbjue+Ak=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js"],"names":["React","useState","useContext","Form","Card","Button","closeButton","Link","DataContext","CreateAccount","updateUserStatus","isUser","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","isValid","setIsValid","ctx","show","setShow","handleShow","handleSubmit","e","preventDefault","alert","toUpperCase","isChecked","length","fullName","saveUserInfo","firstNameInput","target","value","lastNameInput","emailInput","passwordInput","checkbox","setIsChecked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Form, Card, Button, closeButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CreateAccount.css';\nimport { Link } from 'react-router-dom';\nimport DataContext from '../Context/data-context';\n\nfunction CreateAccount({ updateUserStatus, isUser }) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  \n  const ctx = useContext(DataContext);\n\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (firstName === \"\") {\n      alert(\"Error: First name field required.\");\n      return\n    } else if (firstName[0] !== firstName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (lastName === \"\") {\n      alert(\"Error: Last name field required.\");\n      return;\n    }  else if (lastName[0] !== lastName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (email === \"\") {\n      alert(\"Error: Email field required.\");\n      return;\n    }\n\n    if (password === \"\") {\n      alert(\"Error: Password field required.\")\n      return;\n    }\n    \n    if (isChecked === false) {\n      alert(\"Error: Must agree to Terms & Conditions to create account.\")\n      return;\n    }\n    \n    if (password.length < 8) {\n      alert(\"Error: Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      updateUserStatus();\n      let fullName = firstName + \" \" + lastName;\n      ctx.saveUserInfo(fullName, email, password, 0);\n      alert('Success! Your account has been created.');\n    }\n  }\n  \n  const firstNameInput = (e) => {\n    setFirstName(e.target.value);\n    setIsValid(true);\n  }\n\n  const lastNameInput = (e) => {\n    setLastName(e.target.value);\n    setIsValid(true);\n  }\n\n  const emailInput = (e) => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  }\n\n  const passwordInput = (e) => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  }\n\n  const checkbox = (e) => {\n    setIsChecked(true);\n    setIsValid(true);\n  }\n\n  return (\n    <div className=\"card-page create-acc\">\n      <h1 className=\"join-us\">Join the Flock</h1>\n      <h3 className=\"online-acc\">Create an Online Account</h3>\n      <Card>\n        <form \n          className=\"acc-form\"\n          onSubmit={handleSubmit}\n        >\n          {isUser && \n            <div>\n              <p>If you would like to add another account, complete form again.</p> \n            </div>}\n          <label className=\"name-label\">Full Name</label>\n          <div className=\"name-input-container\">\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={firstNameInput}\n              placeholder=\"First Name\" \n              className=\"first-name\"\n              autoComplete=\"off\"\n            />\n            \n            <input \n              type=\"text\"\n              value={lastName}\n              onChange={lastNameInput}\n              placeholder=\"Last Name\" \n              className=\"last-name\"\n              autoComplete=\"false\"\n            />\n          </div>\n\n          <div className=\"email-input-container\">\n            <label className=\"name-label\">Email address</label>\n            <input\n              type=\"email\" \n              onChange={emailInput}\n              placeholder=\"Enter email\" \n              className=\"email-input\"\n              autoComplete=\"off\"\n            />\n            <Form.Text className=\"email-text\">\n              Emails will be used as your username for Logins.\n            </Form.Text>\n          </div>\n\n          <div className=\"password-input-container\">\n            <label className=\"name-label\">Password</label>\n            <input\n              type=\"password\" \n              value={password}\n              onChange={passwordInput}\n              placeholder=\"Password\" \n              className=\"password-input\"\n              autoComplete=\"off\"\n            />\n          </div>\n          \n          <div className=\"checkbox-input-container\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\" \n              onChange={checkbox}\n              name=\"terms\"\n            />\n            <label htmlFor=\"terms\">&nbsp;I agree to the</label>\n            <button className=\"terms-btn\" type=\"button\" onClick={handleShow}>Terms & Conditions</button>\n          </div>\n          \n          <button \n            className=\"rd-btn reg-btn\"\n            type=\"submit\"\n            disabled={!isValid}\n          >\n            {!isUser ? 'Create Account' : 'Add Another Account'}\n          </button>\n        </form>\n        {!isUser && <h5 className=\"card-foot\">Already have an account? &nbsp;\n          <Link to=\"/Login/\">\n            <button  className=\"rd-btn reg-btn\">\n              Log in here\n            </button>\n          </Link>\n        </h5>}\n      </Card>\n    </div>\n  );\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}