{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/workingbank3/frontend/src/components/deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\";\n/**function Deposit() {\n  const [deposit, setDeposit] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n  \n  const ctx = useContext(DataContext);\n\n  let status = ctx.balance;\n  \n  const handleChange = e => {\n    setIsValid(true);\n    setDeposit(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    \n    if (deposit == 0) {\n      alert(\"Please enter how much you would like to deposit\");\n      setDeposit(0);\n      setIsValid(false);\n      return;\n    }\n   \n    ctx.updateBalance(deposit, \"ADD\")\n    e.preventDefault();\n\n    var newBalance = parseInt(balance) + parseInt(deposit);\n    setBalance(newBalance.toString());\n\n    status = ctx.balance;\n    console.log(status);\n    alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n    \n  };*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  const [deposit, setDeposit] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n  const ctx = useContext(DataContext);\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setDeposit(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (deposit == 0) {\n      alert(\"Please enter how much you would like to deposit\");\n      setDeposit(0);\n      setIsValid(false);\n      return;\n    }\n\n    ctx.updateBalance(deposit, \"ADD\");\n    e.preventDefault();\n    var newBalance = parseInt(balance) + parseInt(deposit);\n    setBalance(newBalance.toString());\n    status = ctx.balance;\n    console.log(status);\n    fetch(`/api/deposit`).then(response => response.text()).then(text => {\n      try {\n        const data = JSON.parse(text);\n        console.log(data);\n      } catch (err) {\n        props.setStatus('Deposit failed');\n        console.log('err:', text);\n      }\n    });\n    alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Deposit\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      src: \"./bank.jpg\",\n      alt: \"Banking image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"money-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \" Deposit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"deposit amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" Account Balance: $ \", status, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \" Please enter the amount you would like to deposit. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"$0\",\n                  min: \"0\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: \"input\",\n              type: \"submit\",\n              disabled: !isValid,\n              value: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposit, \"C8LveBT3+MlLztE24JfI1c+WDE8=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/workingbank3/frontend/src/components/deposit.js"],"names":["React","useState","useContext","Card","Form","Button","InputGroup","DataContext","Deposit","deposit","setDeposit","isValid","setIsValid","balance","setBalance","ctx","status","handleChange","e","target","value","handleSubmit","alert","updateBalance","preventDefault","newBalance","parseInt","toString","console","log","fetch","then","response","text","data","JSON","parse","err","props","setStatus"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\n\n/**function Deposit() {\n  const [deposit, setDeposit] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n  \n  const ctx = useContext(DataContext);\n\n  let status = ctx.balance;\n  \n  const handleChange = e => {\n    setIsValid(true);\n    setDeposit(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    \n    if (deposit == 0) {\n      alert(\"Please enter how much you would like to deposit\");\n      setDeposit(0);\n      setIsValid(false);\n      return;\n    }\n   \n    ctx.updateBalance(deposit, \"ADD\")\n    e.preventDefault();\n\n    var newBalance = parseInt(balance) + parseInt(deposit);\n    setBalance(newBalance.toString());\n\n    status = ctx.balance;\n    console.log(status);\n    alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n    \n  };*/\n\n  function Deposit() {\n    const [deposit, setDeposit] = useState(0);\n    const [isValid, setIsValid] = useState(false);\n    const [balance, setBalance] = useState('0');\n    \n    const ctx = useContext(DataContext);\n  \n    let status = ctx.balance;\n    \n    const handleChange = e => {\n      setIsValid(true);\n      setDeposit(e.target.value);\n    };\n  \n    const handleSubmit = (e) => {\n      \n      if (deposit == 0) {\n        alert(\"Please enter how much you would like to deposit\");\n        setDeposit(0);\n        setIsValid(false);\n        return;\n      }\n     \n      ctx.updateBalance(deposit, \"ADD\")\n      e.preventDefault();\n  \n      var newBalance = parseInt(balance) + parseInt(deposit);\n      setBalance(newBalance.toString());\n  \n      status = ctx.balance;\n      console.log(status);\n\n    \n      fetch(`/api/deposit`)\n        .then(response => response.text())\n        .then(text => {\n            try {\n                const data = JSON.parse(text);\n                console.log(data);\n            } catch(err) {\n                props.setStatus('Deposit failed')\n                console.log('err:', text);\n            }\n        });\n      \n\n      alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n      \n    };\n\n  return (\n\n    <Card\n      bgcolor=\"primary\"\n      header=\"Deposit\"\n    >\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n      <div className=\"money-card\">\n        <Card.Header> Deposit </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"deposit amount\">\n            <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to deposit. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Deposit\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Deposit;"]},"metadata":{},"sourceType":"module"}