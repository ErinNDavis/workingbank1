{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/withdraw.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataContext from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw({\n  balance\n}) {\n  _s();\n\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const ctx = useContext(DataContext);\n  let status = `Account Balance $ ${balance}`;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > balance) {\n      alert(\"Withdraw amount cannot exceed account balance.\");\n    } else {\n      ctx.updateCtxBalance(withdrawal, \"MINUS\");\n      alert('Your withdraw was successful.');\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"withdraw card-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card-head\",\n      children: \"Make a Withdrawal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"total\",\n        className: \"balance-card\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trans-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"trans-input\",\n          type: \"text\",\n          value: withdrawal,\n          min: \"0\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"rd-btn\",\n          type: \"submit\",\n          width: \"200\",\n          disabled: !isValid,\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"O9kry7eDtYYeapEfb8KWJx4QvyU=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/withdraw.js"],"names":["React","useState","useContext","Card","Form","Button","DataContext","Withdraw","balance","withdrawal","setWithdrawal","isValid","setIsValid","ctx","status","handleChange","e","target","value","handleSubmit","isNaN","alert","updateCtxBalance","preventDefault"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAO,sCAAP;AACA,OAAOC,WAAP,MAAwB,YAAxB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMY,GAAG,GAAGX,UAAU,CAACI,WAAD,CAAtB;AAEA,MAAIQ,MAAM,GAAI,qBAAoBN,OAAQ,EAA1C;;AAEA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B,QAAII,KAAK,CAACX,UAAD,CAAT,EAAuB;AACrBY,MAAAA,KAAK,CAAC,0EAAD,CAAL;AACAX,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AAED,QAAIH,UAAU,GAAG,CAAjB,EAAoB;AAClBY,MAAAA,KAAK,CAAC,yEAAD,CAAL;AACAX,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AAED,QAAIH,UAAU,GAAGD,OAAjB,EAA0B;AACxBa,MAAAA,KAAK,CAAC,gDAAD,CAAL;AACD,KAFD,MAEO;AACLR,MAAAA,GAAG,CAACS,gBAAJ,CAAqBb,UAArB,EAAiC,OAAjC;AACAY,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;;AACDL,IAAAA,CAAC,CAACO,cAAF;AACD,GAtBD;;AAwBA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,OAAP;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAA,kBAAyCL;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEL,UAHT;AAIE,UAAA,GAAG,EAAC,GAJN;AAKE,UAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,KAFR;AAGE,UAAA,QAAQ,EAAE,CAACJ,OAHb;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7DQJ,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import {React, useState, useContext } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataContext from '../Context';\n\nfunction Withdraw({ balance }) {\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n\n  const ctx = useContext(DataContext);\n\n  let status = `Account Balance $ ${balance}`;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\")\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n    \n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > balance) {\n      alert(\"Withdraw amount cannot exceed account balance.\")\n    } else {\n      ctx.updateCtxBalance(withdrawal, \"MINUS\");\n      alert('Your withdraw was successful.');\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <Card className=\"withdraw card-page\">\n      <h1 className=\"card-head\">Make a Withdrawal</h1>\n      <form onSubmit={handleSubmit}>\n        <h2 id=\"total\" className=\"balance-card\">{status}</h2>\n        <hr/>\n        <div className=\"trans-container\">\n          <input\n            className=\"trans-input\"\n            type=\"text\"\n            value={withdrawal}\n            min=\"0\"\n            onChange={handleChange}\n          />\n          <input  className=\"rd-btn\"\n            type=\"submit\"\n            width=\"200\"\n            disabled={!isValid}\n            value=\"Submit\"\n          />\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default Withdraw;"]},"metadata":{},"sourceType":"module"}