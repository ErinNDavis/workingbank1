{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, status, useContext, useEffect, reset } from \"react\";\nimport { Card, Form, Button, Row, Col, InputGroup } from 'react-bootstrap';\nimport { userContext } from \"../userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [show, setShow] = useState(true);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formChanged, setFormChanged] = useState(false);\n  const {\n    users,\n    setActiveUser\n  } = useContext(userContext);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (password.length < 8) {\n      alert('Passwords must have at least 8 characters');\n      return;\n    }\n\n    users.push({\n      name,\n      email,\n      password,\n      balance: 0,\n      id: users.length\n    });\n    setActiveUser(users[users.length - 1]);\n    console.log(JSON.stringify(users));\n    setShow(false);\n    setValidated(true);\n  };\n\n  async function handleFormChange({\n    target: {\n      id,\n      value\n    }\n  }) {\n    id === 'name' ? setName(value) : id === 'email' ? setEmail(value) : setPassword(value);\n  }\n\n  useEffect(() => {\n    if (!name && !email && !password) {\n      setFormChanged(false);\n    } else {\n      setFormChanged(true);\n    }\n  }, [name, email, password]);\n\n  function clearForm() {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setShow(true);\n    setFormChanged(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Create Account\",\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \" Create An Account \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Enter Full Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"Email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"email@address.com\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please enter a valid email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Strong passwords have at least 8 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"\",\n          onClick: reset(),\n          children: \"Clear Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"3ZwQGMfD/tK+Ux3qB0h1VAThJtk=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js"],"names":["React","useState","status","useContext","useEffect","reset","Card","Form","Button","Row","Col","InputGroup","userContext","CreateAccount","validated","setValidated","show","setShow","name","setName","email","setEmail","password","setPassword","formChanged","setFormChanged","users","setActiveUser","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","length","alert","push","balance","id","console","log","JSON","stringify","handleFormChange","target","value","clearForm"],"mappings":"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","sourcesContent":["\nimport { React, useState, status, useContext, useEffect, reset} from \"react\";\nimport { Card, Form, Button, Row, Col, InputGroup } from 'react-bootstrap';\nimport { userContext } from \"../userContext\";\n\nfunction CreateAccount(){\n    const [validated, setValidated] = useState(false);\n    const [show, setShow] = useState(true);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [formChanged, setFormChanged] = useState(false);\n    const { users, setActiveUser } = useContext(userContext);\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if(form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (password.length < 8){\n            alert('Passwords must have at least 8 characters');\n            return;\n        }\n\n        users.push({name, email, password, balance:0, id:users.length});\n        setActiveUser(users[users.length-1]);\n\n        console.log(JSON.stringify(users));\n        setShow(false);\n\n        setValidated(true);\n    };\n\n    async function handleFormChange({ target:{id, value }}){\n        id === 'name' ? setName(value) : id === 'email' ? setEmail(value) : setPassword(value);\n    }\n\n    useEffect(()=>  {\n        if(!name && !email && !password){\n            setFormChanged(false);\n        } else {\n            setFormChanged(true);\n        }\n    }, [name, email, password]\n    )\n\n    function clearForm(){\n        setName('');\n        setEmail('');\n        setPassword('');\n        setShow(true);\n        setFormChanged(false);\n      }\n\n    return (\n        <Card\n            bgcolor=\"primary\"\n            header=\"Create Account\"\n            status={status}\n        >\n            <Card.Header> Create An Account </Card.Header>\n            <Card.Body>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                        <Form.Label> Enter Full Name </Form.Label>\n                        <Row>\n                            <Col>\n                                <Form.Control \n                                    required\n                                    type=\"text\"\n                                    placeholder=\"First name\" \n                                />\n                            </Col>\n                            <Col>\n                                <Form.Control \n                                    required\n                                    type=\"text\"\n                                    placeholder=\"Last name\" \n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"Email\">\n                        <Form.Label>Email address</Form.Label>\n                        <InputGroup hasValidation>\n                            <Form.Control \n                                type=\"email\" \n                                placeholder=\"email@address.com\"\n                                required \n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please enter a valid email address\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <InputGroup hasValidation>\n                            <Form.Control \n                                type=\"password\" \n                                placeholder=\"password\"\n                                required \n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Strong passwords have at least 8 characters.\n                        </Form.Text>\n                    </Form.Group>\n                \n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Account\n                    </Button> \n                    <Button variant=\"primary\" type=\"\" onClick={reset()}>\n                        Clear Form\n                    </Button>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}