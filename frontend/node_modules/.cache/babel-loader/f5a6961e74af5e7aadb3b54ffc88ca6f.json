{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/workingbank5/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport useToken from './components/useToken';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport Logout from './components/logout';\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  //------------------------------------------------\n  const [user, updateUser] = useState({\n    users: 'peter',\n    updateUsers: updateUsers,\n    email: 'peter@mit.edu',\n    updateEmail: updateEmail,\n    password: 'secret',\n    updatePassword: updatePassword,\n    balance: 100,\n    updateBalance: updateBalance\n  });\n\n  function updateEmail(email) {\n    user.email = email;\n  }\n\n  function updateUsers(Name) {\n    user.users = Name;\n  }\n\n  function updatePassword(password) {\n    user.password = password;\n  }\n\n  function updateBalance(depositAmount, transaction) {\n    if (transaction === \"ADD\") {\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user); // updateAllData(data);\n\n      console.log(user.balance);\n    }\n\n    if (transaction === \"MINUS\") {\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user); // updateAllData(data);\n\n      console.log(user.balance);\n    }\n  } //--------------experimental code---------------------------------------\n  //----------------------------------------------------------------------\n\n\n  const {\n    token,\n    setToken\n  } = useToken();\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  } //--------------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit/\",\n          component: Deposit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw/\",\n          component: Withdraw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout/\",\n          component: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"DoLAt3bPBQi4FgxWGTQcqhtmq0I=\", false, function () {\n  return [useToken];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/workingbank5/frontend/src/App.js"],"names":["HashRouter","Route","NavBar","useToken","Home","Login","Deposit","Withdraw","Logout","React","createContext","useState","DataContext","App","user","updateUser","users","updateUsers","email","updateEmail","password","updatePassword","balance","updateBalance","Name","depositAmount","transaction","parseInt","console","log","token","setToken","padding"],"mappings":"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","sourcesContent":["import { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport useToken from './components/useToken';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport Logout from './components/logout';\nimport React, {createContext, useState} from 'react';\n\nexport const DataContext = createContext();\n\nfunction App() {\n//------------------------------------------------\n  const [user, updateUser]= useState({users:'peter', updateUsers:updateUsers, email:'peter@mit.edu', updateEmail:updateEmail, password:'secret', updatePassword:updatePassword, balance:100, updateBalance:updateBalance});\n  \n  function updateEmail(email){\n    user.email = email;\n  }\n\n  function updateUsers(Name){\n    user.users = Name;\n  }\n\n  function updatePassword(password){\n    user.password = password;\n  }\n  \n  function updateBalance(depositAmount, transaction ){\n    if(transaction ===\"ADD\"){\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }   \n    if(transaction ===\"MINUS\"){\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }\n  }\n//--------------experimental code---------------------------------------\n\n\n//----------------------------------------------------------------------\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n//--------------------------------------------------------\n  return (\n      <HashRouter>\n        <NavBar/>\n        <DataContext.Provider value={user}>\n            <div className=\"container\" style={{padding: \"20px\"}}>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/deposit/\" component={Deposit} />\n              <Route path=\"/withdraw/\" component={Withdraw} />\n              <Route path=\"/logout/\" component={Logout} />\n            </div>\n          </DataContext.Provider>\n        </HashRouter>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}