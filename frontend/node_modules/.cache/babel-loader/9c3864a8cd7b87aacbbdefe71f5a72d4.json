{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/workingbank3/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport useToken from './components/useToken';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport Logout from './components/logout';\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  /**const [user, updateUser]= useState({users:'peter', updateUsers:updateUsers, email:'peter@mit.edu', updateEmail:updateEmail, password:'secret', updatePassword:updatePassword, balance:100, updateBalance:updateBalance});\n  \n  function updateEmail(email){\n    user.email = email;\n  }\n   function updateUsers(Name){\n    user.users = Name;\n  }\n   function updatePassword(password){\n    user.password = password;\n  }\n  \n  function updateBalance(depositAmount, transaction ){\n    if(transaction ===\"ADD\"){\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }   \n    if(transaction ===\"MINUS\"){\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }\n  }*/\n  const {\n    token,\n    setToken\n  } = useToken();\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit/\",\n          component: Deposit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw/\",\n          component: Withdraw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout/\",\n          component: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"rFkLVEFtg71T9kKDOfdoCepYcDQ=\", false, function () {\n  return [useToken];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/workingbank3/frontend/src/App.js"],"names":["HashRouter","Route","NavBar","useToken","Home","Login","Deposit","Withdraw","Logout","React","createContext","useState","DataContext","App","token","setToken","user","padding"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEP,SAASG,GAAT,GAAe;AAAA;;AAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBZ,QAAQ,EAApC;;AAEA,MAAG,CAACW,KAAJ,EAAW;AACT,wBAAO,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACI,QAAC,UAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEC,IAA7B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAlC;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD;;GAlDQK,G;UA8BqBV,Q;;;KA9BrBU,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport useToken from './components/useToken';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport Logout from './components/logout';\nimport React, {createContext, useState} from 'react';\n\nexport const DataContext = createContext();\n\nfunction App() {\n\n  /**const [user, updateUser]= useState({users:'peter', updateUsers:updateUsers, email:'peter@mit.edu', updateEmail:updateEmail, password:'secret', updatePassword:updatePassword, balance:100, updateBalance:updateBalance});\n  \n  function updateEmail(email){\n    user.email = email;\n  }\n\n  function updateUsers(Name){\n    user.users = Name;\n  }\n\n  function updatePassword(password){\n    user.password = password;\n  }\n  \n  function updateBalance(depositAmount, transaction ){\n    if(transaction ===\"ADD\"){\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }   \n    if(transaction ===\"MINUS\"){\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }\n  }*/\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n      <HashRouter>\n        <NavBar/>\n        <DataContext.Provider value={user}>\n            <div className=\"container\" style={{padding: \"20px\"}}>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/deposit/\" component={Deposit} />\n              <Route path=\"/withdraw/\" component={Withdraw} />\n              <Route path=\"/logout/\" component={Logout} />\n            </div>\n          </DataContext.Provider>\n        </HashRouter>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}