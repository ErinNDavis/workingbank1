{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport CreateAccount from './components/CreateAccount';\nimport Home from './components/home';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport AllData from './components/alldata';\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [user, updateUser] = useState({\n    users: 'peter',\n    updateUsers: updateUsers,\n    email: 'peter@mit.edu',\n    updateEmail: updateEmail,\n    password: 'secret',\n    updatePassword: updatePassword,\n    balance: 100,\n    updateBalance: updateBalance\n  });\n  const [data, setData] = useState({\n    updateData: updateData\n  });\n\n  function updateData() {\n    let newAccount = {\n      user: user.users,\n      email: user.email,\n      password: user.password,\n      balance: user.balance\n    };\n  }\n\n  function updateEmail(email) {\n    user.email = email;\n  }\n\n  function updateUsers(Name) {\n    user.users = Name;\n  }\n\n  function updatePassword(password) {\n    user.password = password;\n  }\n\n  function updateBalance(depositAmount, transaction) {\n    if (transaction === \"ADD\") {\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n      console.log(user.balance);\n    }\n\n    if (transaction === \"MINUS\") {\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n      console.log(user.balance);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/CreateAccount/\",\n          component: CreateAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit/\",\n          component: Deposit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw/\",\n          component: Withdraw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/alldata/\",\n          component: AllData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"4IgtxsvtRAwXDmBgNy006+dWnYg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/App.js"],"names":["HashRouter","Route","NavBar","CreateAccount","Home","Deposit","Withdraw","AllData","React","createContext","useState","DataContext","App","user","updateUser","users","updateUsers","email","updateEmail","password","updatePassword","balance","updateBalance","data","setData","updateData","newAccount","Name","depositAmount","transaction","parseInt","console","log","padding"],"mappings":"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","sourcesContent":["import { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport CreateAccount from './components/CreateAccount';\nimport Home from './components/home';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport AllData from './components/alldata';\nimport React, {createContext, useState} from 'react';\n\nexport const DataContext = createContext();\n\nfunction App() {\n  \n  const [user, updateUser]= useState({users:'peter', updateUsers:updateUsers, email:'peter@mit.edu', updateEmail:updateEmail, password:'secret', updatePassword:updatePassword, balance:100, updateBalance:updateBalance});\n  const [data, setData] = useState({updateData:updateData});\n\n  function updateData(){\n    let newAccount = {user: user.users, email: user.email, password: user.password, balance: user.balance}; \n    \n  }\n  \n  function updateEmail(email){\n    user.email = email;\n  }\n\n  function updateUsers(Name){\n    user.users = Name;\n  }\n\n  function updatePassword(password){\n    user.password = password;\n  }\n  \n  function updateBalance(depositAmount, transaction ){\n    if(transaction ===\"ADD\"){\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n      console.log(user.balance);\n    }   \n    if(transaction ===\"MINUS\"){\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n      console.log(user.balance);\n    }\n  }\n\n  return (\n      <HashRouter>\n        <NavBar/>\n        <DataContext.Provider value={user}>\n            <div className=\"container\" style={{padding: \"20px\"}}>\n              <Route path=\"/\" exact component={Home} /> \n              <Route path=\"/CreateAccount/\" component={CreateAccount} />\n              <Route path=\"/deposit/\" component={Deposit} />\n              <Route path=\"/withdraw/\" component={Withdraw} />\n              <Route path=\"/alldata/\" component={AllData} />\n            </div>\n          </DataContext.Provider>\n        </HashRouter>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}