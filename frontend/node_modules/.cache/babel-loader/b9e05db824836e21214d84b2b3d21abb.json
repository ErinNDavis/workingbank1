{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({\n  saveUserInfo: () => {},\n  users: [],\n  updateCtxBalance: () => {},\n  currentUser: {},\n  updateCurrUser: () => {}\n});\nexport const DataContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState([{\n    \"name\": '',\n    \"email\": '',\n    \"password\": '',\n    \"balance\": 0\n  }]);\n  const [currUser, setCurrUser] = useState(\"\");\n\n  const saveUserHandler = (name, email, password, balance) => {\n    let newUser = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password,\n      \"balance\": balance\n    };\n    setUserList(prevState => [...prevState, newUser]);\n    setCurrUser(newUser);\n  };\n\n  const updateCtxBalance = (num, calc) => {\n    let newBal = 0;\n\n    if (calc === \"ADD\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) + parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    } else if (calc === \"MINUS\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) - parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    }\n\n    setCurrUser(prevState => {\n      return { ...prevState,\n        \"balance\": newBal\n      };\n    });\n  };\n\n  let myValue = {\n    saveUserInfo: saveUserHandler,\n    users: userList,\n    updateCtxBalance: updateCtxBalance\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: myValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DataContextProvider, \"c9KeJhqMRhmDxfbrGPQfxEiRssU=\");\n\n_c = DataContextProvider;\nexport default DataContext; //------------------------------------------------------------------\n\nvar _c;\n\n$RefreshReg$(_c, \"DataContextProvider\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/Context.js"],"names":["useState","createContext","DataContext","saveUserInfo","users","updateCtxBalance","currentUser","updateCurrUser","DataContextProvider","children","userList","setUserList","currUser","setCurrUser","saveUserHandler","name","email","password","balance","newUser","prevState","num","calc","newBal","i","length","parseInt","myValue"],"mappings":"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","sourcesContent":["import { useState, createContext } from \"react\";\n\nconst DataContext = createContext({\n    saveUserInfo: () => {},\n    users: [],\n    updateCtxBalance: () => {},\n    currentUser: {},\n    updateCurrUser: () => {}\n  });\n  \n  export const DataContextProvider = ({ children }) => {\n    const [userList, setUserList] = useState([{      \n      \"name\": '',\n      \"email\": '',\n      \"password\": '',\n      \"balance\": 0\n    }]);\n    const [currUser, setCurrUser] = useState(\"\");\n    \n    const saveUserHandler = (name, email, password, balance) => {\n      let newUser = {\n        \"name\": name,\n        \"email\": email,\n        \"password\": password,\n        \"balance\": balance\n      };\n  \n      setUserList(prevState => [...prevState, newUser]);\n      setCurrUser(newUser);\n    }\n  \n    const updateCtxBalance = (num, calc) => {\n      let newBal = 0;\n  \n      if (calc === \"ADD\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) + parseInt(num);\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      } else if(calc === \"MINUS\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) - parseInt(num)\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      }\n      \n      setCurrUser(prevState => {\n        return {...prevState, \"balance\":newBal}\n      })\n    }\n  \n    let myValue = {\n      saveUserInfo: saveUserHandler,\n      users: userList,\n      updateCtxBalance: updateCtxBalance,\n    }\n  \n    return (\n      <DataContext.Provider\n        value={myValue}\n      >\n        {children}\n      </DataContext.Provider>\n    )\n  }\n\n  export default DataContext;\n//------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}