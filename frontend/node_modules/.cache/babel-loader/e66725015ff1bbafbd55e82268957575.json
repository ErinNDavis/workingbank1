{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/workingbank1/frontend/src/components/withdraw.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw() {\n  _s();\n\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n  const ctx = useContext(DataContext);\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > status) {\n      alert(\"Withdraw amount cannot exceed account balance.\");\n    } else {\n      ctx.updateBalance(withdrawal, \"MINUS\");\n      e.preventDefault();\n      var newBalance = parseInt(balance) - parseInt(withdrawal);\n      setBalance(newBalance.toString());\n      status = ctx.balance;\n      console.log(status);\n      alert('Your withdraw was successful. Account Balance is now: $' + ctx.balance);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Withdraw\",\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      src: \"./bank.jpg\",\n      alt: \"Banking image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"money-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \" Withdraw \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"withdraw amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" Account Balance: $ \", status, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \" Please enter the amount you would like to withdraw. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"$0\",\n                  min: \"0\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: \"input\",\n              type: \"submit\",\n              disabled: !isValid,\n              value: \"Make Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"8sqVGFiunSGqf4xaisBnIl5SvqQ=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/workingbank1/frontend/src/components/withdraw.js"],"names":["React","useState","useContext","Card","Form","Button","InputGroup","DataContext","Withdraw","withdrawal","setWithdrawal","isValid","setIsValid","balance","setBalance","ctx","status","handleChange","e","target","value","handleSubmit","isNaN","alert","updateBalance","preventDefault","newBalance","parseInt","toString","console","log"],"mappings":"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","sourcesContent":["import {React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\nimport \"./home.css\";\n\nfunction Withdraw() {\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n\n  const ctx = useContext(DataContext);\n\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\")\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n    \n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > status) {\n      alert(\"Withdraw amount cannot exceed account balance.\")\n    }\n    else{\n\n      ctx.updateBalance(withdrawal, \"MINUS\");\n      e.preventDefault();\n\n      var newBalance = parseInt(balance) - parseInt(withdrawal);\n      setBalance(newBalance.toString());\n\n      status = ctx.balance;\n      console.log(status);\n      alert('Your withdraw was successful. Account Balance is now: $' + ctx.balance);\n      }\n  };\n\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Withdraw\"\n      status={status}\n    >\n\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n        <div className=\"money-card\">\n        <Card.Header> Withdraw </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"withdraw amount\">\n              <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to withdraw. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Make Withdraw\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Withdraw;"]},"metadata":{},"sourceType":"module"}