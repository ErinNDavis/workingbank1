{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/withdraw.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext, App } from \"../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw({\n  balance\n}) {\n  _s();\n\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const ctx = useContext(DataContext);\n  let status = `Account Balance $ ${user.balance}`;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > balance) {\n      alert(\"Withdraw amount cannot exceed account balance.\");\n    }\n\n    alert('Your withdraw was successful.');\n    ctx.updateBalance(withdrawal, \"MINUS\");\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Withdraw\",\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \" Withdraw \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"withdraw amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", status, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Please enter the amount you would like to withdraw. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"$0\",\n              min: \"0\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: \"input\",\n          type: \"submit\",\n          disabled: !isValid,\n          value: \"Make Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"O9kry7eDtYYeapEfb8KWJx4QvyU=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/withdraw.js"],"names":["React","useState","useContext","Card","Form","Button","InputGroup","DataContext","App","Withdraw","balance","withdrawal","setWithdrawal","isValid","setIsValid","ctx","status","user","handleChange","e","target","value","handleSubmit","isNaN","alert","updateBalance","preventDefault"],"mappings":"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","sourcesContent":["import {React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext, App } from \"../App.js\"\n\nfunction Withdraw({ balance }) {\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n\n  const ctx = useContext(DataContext);\n\n  let status = `Account Balance $ ${user.balance}`;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\")\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n    \n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > balance) {\n      alert(\"Withdraw amount cannot exceed account balance.\")\n    }\n\n    alert('Your withdraw was successful.');\n    ctx.updateBalance(withdrawal, \"MINUS\");\n    e.preventDefault();\n  };\n\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Withdraw\"\n      status={status}\n    >\n\n      <Card.Header> Withdraw </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"withdraw amount\">\n            <h3> {status} </h3>\n            <Form.Label> Please enter the amount you would like to withdraw. </Form.Label>\n            <InputGroup>\n              <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n            </InputGroup>\n          </Form.Group>\n          <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Make Withdraw\"/>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Withdraw;"]},"metadata":{},"sourceType":"module"}