{"ast":null,"code":"var _jsxFileName = \"/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Form, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //--------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({\n  saveUserInfo: () => {},\n  users: [],\n  updateCtxBalance: () => {},\n  currentUser: {},\n  updateCurrUser: () => {}\n});\nexport const DataContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState([{\n    \"name\": '',\n    \"email\": '',\n    \"password\": '',\n    \"balance\": 0\n  }]);\n  const [currUser, setCurrUser] = useState(\"\");\n\n  const saveUserHandler = (name, email, password, balance) => {\n    let newUser = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password,\n      \"balance\": balance\n    };\n    setUserList(prevState => [...prevState, newUser]);\n    setCurrUser(newUser);\n  };\n\n  const updateCtxBalance = (num, calc) => {\n    let newBal = 0;\n\n    if (calc === \"ADD\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) + parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    } else if (calc === \"MINUS\") {\n      setUserList(prevState => {\n        for (let i = 0; i < prevState.length; i++) {\n          if (prevState[i].email === currUser.email) {\n            newBal = parseInt(prevState[i].balance) - parseInt(num);\n            prevState[i].balance = newBal;\n          }\n        }\n\n        return prevState;\n      });\n    }\n\n    setCurrUser(prevState => {\n      return { ...prevState,\n        \"balance\": newBal\n      };\n    });\n  };\n\n  const updateCurrUser = username => {\n    let loggedInUser = userList.filter(user => user.email === username)[0];\n    setCurrUser(loggedInUser);\n  };\n\n  let myValue = {\n    saveUserInfo: saveUserHandler,\n    users: userList,\n    updateCtxBalance: updateCtxBalance,\n    currentUser: currUser,\n    updateCurrUser: updateCurrUser\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: myValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}; //------------------------------------------------------------------\n\n_s(DataContextProvider, \"c9KeJhqMRhmDxfbrGPQfxEiRssU=\");\n\n_c = DataContextProvider;\n\nfunction CreateAccount({\n  updateUserStatus,\n  isUser\n}) {\n  _s2();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const ctx = useContext(DataContext); //const [show, setShow] = useState(false);\n  //const handleShow = () => setShow(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (firstName === \"\") {\n      alert(\"Error: First name field required.\");\n      return;\n    } else if (firstName[0] !== firstName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (lastName === \"\") {\n      alert(\"Error: Last name field required.\");\n      return;\n    } else if (lastName[0] !== lastName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (email === \"\") {\n      alert(\"Error: Email field required.\");\n      return;\n    }\n\n    if (password === \"\") {\n      alert(\"Error: Password field required.\");\n      return;\n    }\n\n    if (password.length < 8) {\n      alert(\"Error: Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      updateUserStatus();\n      let fullName = firstName + \" \" + lastName;\n      ctx.saveUserInfo(fullName, email, password, 0);\n      alert('Success! Your account has been created.');\n    }\n  };\n\n  const firstNameInput = e => {\n    setFirstName(e.target.value);\n    setIsValid(true);\n  };\n\n  const lastNameInput = e => {\n    setLastName(e.target.value);\n    setIsValid(true);\n  };\n\n  const emailInput = e => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  };\n\n  const passwordInput = e => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-page create-acc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"join-us\",\n      children: \"Join the Flock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"online-acc\",\n      children: \"Create an Online Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"acc-form\",\n        onSubmit: handleSubmit,\n        children: [isUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you would like to add another account, complete form again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"name-label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: firstName,\n            onChange: firstNameInput,\n            placeholder: \"First Name\",\n            className: \"first-name\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: lastName,\n            onChange: lastNameInput,\n            placeholder: \"Last Name\",\n            className: \"last-name\",\n            autoComplete: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: emailInput,\n            placeholder: \"Enter email\",\n            className: \"email-input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"email-text\",\n            children: \"Emails will be used as your username for Logins.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"name-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: passwordInput,\n            placeholder: \"Password\",\n            className: \"password-input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rd-btn reg-btn\",\n          type: \"submit\",\n          disabled: !isValid,\n          children: !isUser ? 'Create Account' : 'Add Another Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CreateAccount, \"4tnjIqXG0JpL1+p5D6X/bZRDvWM=\");\n\n_c2 = CreateAccount;\nexport default CreateAccount;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataContextProvider\");\n$RefreshReg$(_c2, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ErinsMac/Desktop/BadBank/bank/src/components/CreateAccount.js"],"names":["React","useState","useContext","createContext","Form","Card","DataContext","saveUserInfo","users","updateCtxBalance","currentUser","updateCurrUser","DataContextProvider","children","userList","setUserList","currUser","setCurrUser","saveUserHandler","name","email","password","balance","newUser","prevState","num","calc","newBal","i","length","parseInt","username","loggedInUser","filter","user","myValue","CreateAccount","updateUserStatus","isUser","firstName","setFirstName","lastName","setLastName","setEmail","setPassword","isValid","setIsValid","ctx","handleSubmit","e","preventDefault","alert","toUpperCase","fullName","firstNameInput","target","value","lastNameInput","emailInput","passwordInput"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { Form, Card} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//--------------------------------------------------------------\nconst DataContext = createContext({\n    saveUserInfo: () => {},\n    users: [],\n    updateCtxBalance: () => {},\n    currentUser: {},\n    updateCurrUser: () => {}\n  });\n  \n  export const DataContextProvider = ({ children }) => {\n    const [userList, setUserList] = useState([{      \n      \"name\": '',\n      \"email\": '',\n      \"password\": '',\n      \"balance\": 0\n    }]);\n    const [currUser, setCurrUser] = useState(\"\");\n    \n    const saveUserHandler = (name, email, password, balance) => {\n      let newUser = {\n        \"name\": name,\n        \"email\": email,\n        \"password\": password,\n        \"balance\": balance\n      };\n  \n      setUserList(prevState => [...prevState, newUser]);\n      setCurrUser(newUser);\n    }\n  \n    const updateCtxBalance = (num, calc) => {\n      let newBal = 0;\n  \n      if (calc === \"ADD\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) + parseInt(num);\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      } else if(calc === \"MINUS\") {\n        setUserList(prevState => {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i].email === currUser.email) {\n              newBal = parseInt(prevState[i].balance) - parseInt(num)\n              prevState[i].balance = newBal\n            }\n          }\n          return prevState;\n        })\n      }\n      \n      setCurrUser(prevState => {\n        return {...prevState, \"balance\":newBal}\n      })\n    }\n  \n    const updateCurrUser = (username) => {\n      let loggedInUser = userList.filter(user => user.email === username)[0];\n  \n      setCurrUser(loggedInUser);\n    }\n  \n    let myValue = {\n      saveUserInfo: saveUserHandler,\n      users: userList,\n      updateCtxBalance: updateCtxBalance,\n      currentUser: currUser,\n      updateCurrUser: updateCurrUser\n    }\n  \n    return (\n      <DataContext.Provider\n        value={myValue}\n      >\n        {children}\n      </DataContext.Provider>\n    )\n  }\n//------------------------------------------------------------------\nfunction CreateAccount({ updateUserStatus, isUser }) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  \n  const ctx = useContext(DataContext);\n\n  //const [show, setShow] = useState(false);\n  //const handleShow = () => setShow(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (firstName === \"\") {\n      alert(\"Error: First name field required.\");\n      return\n    } else if (firstName[0] !== firstName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (lastName === \"\") {\n      alert(\"Error: Last name field required.\");\n      return;\n    }  else if (lastName[0] !== lastName[0].toUpperCase()) {\n      alert(\"Error: Names must start with capital letters.\");\n      return;\n    }\n\n    if (email === \"\") {\n      alert(\"Error: Email field required.\");\n      return;\n    }\n\n    if (password === \"\") {\n      alert(\"Error: Password field required.\")\n      return;\n    }\n    \n    if (password.length < 8) {\n      alert(\"Error: Password must contain at least 8 characters.\");\n      setPassword(\"\");\n    } else {\n      updateUserStatus();\n      let fullName = firstName + \" \" + lastName;\n      ctx.saveUserInfo(fullName, email, password, 0);\n      alert('Success! Your account has been created.');\n    }\n  }\n  \n  const firstNameInput = (e) => {\n    setFirstName(e.target.value);\n    setIsValid(true);\n  }\n\n  const lastNameInput = (e) => {\n    setLastName(e.target.value);\n    setIsValid(true);\n  }\n\n  const emailInput = (e) => {\n    setEmail(e.target.value);\n    setIsValid(true);\n  }\n\n  const passwordInput = (e) => {\n    setPassword(e.target.value);\n    setIsValid(true);\n  }\n\n  return (\n    <div className=\"card-page create-acc\">\n      <h1 className=\"join-us\">Join the Flock</h1>\n      <h3 className=\"online-acc\">Create an Online Account</h3>\n      <Card>\n        <form \n          className=\"acc-form\"\n          onSubmit={handleSubmit}\n        >\n          {isUser && \n            <div>\n              <p>If you would like to add another account, complete form again.</p> \n            </div>}\n          <label className=\"name-label\">Full Name</label>\n          <div className=\"name-input-container\">\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={firstNameInput}\n              placeholder=\"First Name\" \n              className=\"first-name\"\n              autoComplete=\"off\"\n            />\n            \n            <input \n              type=\"text\"\n              value={lastName}\n              onChange={lastNameInput}\n              placeholder=\"Last Name\" \n              className=\"last-name\"\n              autoComplete=\"false\"\n            />\n          </div>\n\n          <div className=\"email-input-container\">\n            <label className=\"name-label\">Email address</label>\n            <input\n              type=\"email\" \n              onChange={emailInput}\n              placeholder=\"Enter email\" \n              className=\"email-input\"\n              autoComplete=\"off\"\n            />\n            <Form.Text className=\"email-text\">\n              Emails will be used as your username for Logins.\n            </Form.Text>\n          </div>\n\n          <div className=\"password-input-container\">\n            <label className=\"name-label\">Password</label>\n            <input\n              type=\"password\" \n              value={password}\n              onChange={passwordInput}\n              placeholder=\"Password\" \n              className=\"password-input\"\n              autoComplete=\"off\"\n            />\n          </div>\n          \n          <button \n            className=\"rd-btn reg-btn\"\n            type=\"submit\"\n            disabled={!isValid}\n          >\n            {!isUser ? 'Create Account' : 'Add Another Account'}\n          </button>\n        </form>\n      </Card>\n    </div>\n  );\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}