[{"/Users/ErinsMac/Desktop/workingbank5/frontend/src/index.js":"1","/Users/ErinsMac/Desktop/workingbank5/frontend/src/App.js":"2","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/login.js":"3","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/home.js":"4","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/deposit.js":"5","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/useToken.js":"6","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/Navbar.js":"7","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/logout.js":"8","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/withdraw.js":"9","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/changePwd.js":"10"},{"size":267,"mtime":1636657253525,"results":"11","hashOfConfig":"12"},{"size":2238,"mtime":1636854270962,"results":"13","hashOfConfig":"12"},{"size":6699,"mtime":1636855600870,"results":"14","hashOfConfig":"12"},{"size":2398,"mtime":1636853438971,"results":"15","hashOfConfig":"12"},{"size":2716,"mtime":1636838603895,"results":"16","hashOfConfig":"12"},{"size":424,"mtime":1636857812088,"results":"17","hashOfConfig":"12"},{"size":1782,"mtime":1636769067070,"results":"18","hashOfConfig":"12"},{"size":1275,"mtime":1636838600328,"results":"19","hashOfConfig":"12"},{"size":3153,"mtime":1636838593701,"results":"20","hashOfConfig":"12"},{"size":2806,"mtime":1636857779320,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"znzslh",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ErinsMac/Desktop/workingbank5/frontend/src/index.js",[],["45","46"],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/App.js",[],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/login.js",["47","48"],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/home.js",["49"],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/deposit.js",["50","51"],"import React, { useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\n\nfunction Deposit() {\n\n  const [deposit, setDeposit] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n\n  //-----------------------------------------------\n  let user = JSON.parse(window.localStorage.getItem('user'));\n    let userbalance = user.balance;\n    let email = user.email;\n    console.log(userbalance + \" userbalance\");\n  //-------------------------------------------------\n  \n  const ctx = useContext(DataContext);\n  \n  ctx.balance = userbalance;\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setDeposit(e.target.value);\n  };\n\n  async function updateDB(credentials){\n    const result = await fetch('/api/deposit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n  }\n\n  const handleSubmit = async e => {\n    \n    if (deposit == 0) {\n      alert(\"Please enter how much you would like to deposit\");\n      setDeposit(0);\n      setIsValid(false);\n      return;\n    }\n    \n    ctx.updateBalance(deposit, \"ADD\")\n    e.preventDefault();\n\n    var newBalance = parseInt(balance) + parseInt(deposit);\n    setBalance(newBalance.toString());\n\n    status = ctx.balance;\n    console.log(status);\n\n    alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n    user['balance']=ctx.balance;\n    localStorage.setItem('user', JSON.stringify(user));\n\n    e.preventDefault();\n    console.log(\"balance \"+ status + \" email \" + email);\n    updateDB({\n      email,\n      status\n    });\n  };\n\n  return (\n\n    <Card\n      bgcolor=\"primary\"\n      header=\"Deposit\"\n    >\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n      <div className=\"money-card\">\n        <Card.Header> Deposit </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"deposit amount\">\n            <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to deposit. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Deposit\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Deposit;","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/useToken.js",[],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/Navbar.js",[],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/logout.js",[],"/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/withdraw.js",["52"],"import {React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\nimport \"./home.css\";\n\nfunction Withdraw() {\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n\n  //-----------------------------------------------\n  let user = JSON.parse(window.localStorage.getItem('user'));\n  let userbalance = user.balance;\n  let email = user.email;\n  console.log(userbalance + \" userbalance\");\n  //-------------------------------------------------\n\n  const ctx = useContext(DataContext);\n\n  ctx.balance = userbalance;\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  async function updateDB(credentials){\n    const result = await fetch('/api/withdraw', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n  }\n\n  const handleSubmit = async e => {\n\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\")\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n    \n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > status) {\n      alert(\"Withdraw amount cannot exceed account balance.\")\n    }\n    else{\n\n      ctx.updateBalance(withdrawal, \"MINUS\");\n      e.preventDefault();\n\n      var newBalance = parseInt(balance) - parseInt(withdrawal);\n      setBalance(newBalance.toString());\n\n      status = ctx.balance;\n      console.log(status);\n      alert('Your withdraw was successful. Account Balance is now: $' + ctx.balance);\n\n      user['balance']=ctx.balance;\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      e.preventDefault();\n      console.log(\"balance \"+ status + \" email \" + email);\n      updateDB({\n        email,\n        status\n      });\n    }\n  };\n\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Withdraw\"\n      status={status}\n    >\n\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n        <div className=\"money-card\">\n        <Card.Header> Withdraw </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"withdraw amount\">\n              <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to withdraw. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Make Withdraw\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Withdraw;","/Users/ErinsMac/Desktop/workingbank5/frontend/src/components/changePwd.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":21},{"ruleId":"57","severity":1,"message":"61","line":18,"column":9,"nodeType":"59","messageId":"60","endLine":18,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":12,"column":15,"nodeType":"59","messageId":"60","endLine":12,"endColumn":21},{"ruleId":"57","severity":1,"message":"62","line":30,"column":11,"nodeType":"59","messageId":"60","endLine":30,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":42,"column":17,"nodeType":"65","messageId":"66","endLine":42,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":30,"column":11,"nodeType":"59","messageId":"60","endLine":30,"endColumn":17},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'DataContext' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]